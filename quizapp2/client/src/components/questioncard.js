import { useState, useEffect } from "react";
// import Confetti from "react-confetti";

//THIS IS WHERE LOGIC AND USE STATE GO
const QuestionCard = ({ question, count, setCount }) => {
  const [testCorrect, setTestCorrect] = useState("False"); // validates if submited response is correct
  // const [confetti, setConfetti] = useState(false); // creates confetti

  //QUALITY OF LIFE CODE
  // function will make special char appear on page, will pass them through function as string
  function decodeHtml(html) {
    var txt = document.createElement("textarea");
    txt.innerHTML = html;
    return txt.value;
  }
  //score validation, created an event  that tests correct answer vs your choice
  const handleClick = (e) => {
   
    console.log(e.target.value, "your answer");
    console.log(question.correct_answer, "correct answer");
   
    if (e.target.value == question.correct_answer) {
      e.target.style.backgroundColor = "green";
      setTestCorrect("True");
      setCount((c) => c + 1)
      // setConfetti(true);
      console.log(testCorrect);
    } else {
      e.target.style.backgroundColor = "red"; 
      // setConfetti(false);  
    }; 
    
  };

  //THIS IS CALLING ALL THE LOGIC I JUST CREATED
  //BE SURE EVERYTHING REFRENCED ABOVE IS BEING USED BELOW OR CODE WILL BREAK
  return (
    <div className={"question-section"}>
      <div className="question-text">{decodeHtml(question.question)}</div>
      <br></br>
      <div className="answer-section">
        {question.incorrect_answers.map((option, index) => {
          // populates the questions possible answers. they are being generated by the API!
          // the syntax question.correct_answer is coded by the API, this logic is just calling it.
          return (
            <button className="button" key={index} onClick={handleClick} value={option}>
              {decodeHtml(option)}
            </button>
          );
        })}
        <button className="button" onClick={handleClick} value={question.correct_answer}>
          {decodeHtml(question.correct_answer)}
        </button>
      </div>
      <br></br>
      <br></br>
      {testCorrect} 
    </div>
  );
};

export default QuestionCard;

//randomizes which option is the correct answer

// const ranNum = Math.floor(Math.random()*(3))
//         question.incorrect_answers.splice(ranNum, 0, question.correct_answer)